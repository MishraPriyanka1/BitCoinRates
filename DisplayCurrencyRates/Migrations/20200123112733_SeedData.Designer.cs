// <auto-generated />
using System;
using DisplayCurrencyRates.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DisplayCurrencyRates.Migrations
{
    [DbContext(typeof(CurrencyContext))]
    [Migration("20200123112733_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DisplayCurrencyRates.Data.Entities.BitCoinIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<double>("Rate");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("BitCoinIndexes");

                    b.HasData(
                        new { Id = 1, Date = new DateTime(2020, 1, 23, 12, 27, 31, 975, DateTimeKind.Local), Rate = 8661.01, Symbol = "EUR" },
                        new { Id = 2, Date = new DateTime(2020, 1, 22, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8727.6033, Symbol = "EUR" },
                        new { Id = 3, Date = new DateTime(2020, 1, 21, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8631.2883, Symbol = "EUR" },
                        new { Id = 4, Date = new DateTime(2020, 1, 20, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8698.5717, Symbol = "EUR" },
                        new { Id = 5, Date = new DateTime(2020, 1, 19, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8901.17, Symbol = "EUR" },
                        new { Id = 6, Date = new DateTime(2020, 1, 18, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8890.25, Symbol = "EUR" },
                        new { Id = 7, Date = new DateTime(2020, 1, 17, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8716.9133, Symbol = "EUR" },
                        new { Id = 8, Date = new DateTime(2020, 1, 16, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8808.4867, Symbol = "EUR" },
                        new { Id = 9, Date = new DateTime(2020, 1, 15, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8807.4267, Symbol = "EUR" },
                        new { Id = 10, Date = new DateTime(2020, 1, 14, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8105.4783, Symbol = "EUR" },
                        new { Id = 11, Date = new DateTime(2020, 1, 13, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8178.8833, Symbol = "EUR" },
                        new { Id = 12, Date = new DateTime(2020, 1, 12, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8016.4267, Symbol = "EUR" },
                        new { Id = 13, Date = new DateTime(2020, 1, 11, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8189.265, Symbol = "EUR" },
                        new { Id = 14, Date = new DateTime(2020, 1, 10, 12, 27, 31, 978, DateTimeKind.Local), Rate = 7816.9233, Symbol = "EUR" },
                        new { Id = 15, Date = new DateTime(2020, 1, 9, 12, 27, 31, 978, DateTimeKind.Local), Rate = 8560.93, Symbol = "EUR" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
